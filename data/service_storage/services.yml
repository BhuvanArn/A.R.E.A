services:
  - name: test
    reactions:
      - name: log
        description: log to console as a reaction for testing
        commit:
          middleware: log

  - name: discord
    credentials:
      - name: token
        regex: "^*$"

    actions:
      - name: new_message
        description: action when a new message is received
        time: 30
        inputs:
          - name: channel_id
            regex: "^*$"

        fetch:
          strategy: hash
          middleware: log
          endpoint:
            method: get
            url: https://discord.com/api/v9/channels/$+channel_id/messages?limit=50
            headers: |
              {"Authorization": "$+token"}

    reactions:
      - name: send_message
        description: send a user defined message in a channel
        update_action: true
        inputs:
          - name: channel_id
            regex: "^*$"

          - name: message
            regex: "^*$"

        commit:
          endpoint:
              method: post
              url: https://discord.com/api/v9/channels/$+channel_id/messages
              headers: |
                {"Authorization": "$+token", "Content-Type": "application/json"}
              data: |
                {"content": "$+message", "flags": 0, "mobile_network_type": "unknown", "tts": false}
  
  - name: spotify
    credentials:
      - name: token
        regex: "^*$"
    
    actions:
      - name: artist_albums
        description: action new album of artist
        time: 30
        inputs:
          - name: artist_id
            regex: "^*$"

        fetch:
          strategy: hash
          middleware: log
          endpoint:
            method: get
            url: https://api.spotify.com/v1/artists/$+artist_id/albums
            headers: |
              {"Authorization": "Bearer $+token"}

      - name: playback_playing
        description: action playback playing
        time: 5

        fetch:
          strategy: spotify.strategy_playback_playing
          middleware: spotify.middleware_playback_playing
          endpoint:
            method: get
            url: https://api.spotify.com/v1/me/player
            headers: |
              {"Authorization": "Bearer $+token"}
    
    reactions:
      - name: save_albums
        description: save a list of albums into user profile
        update_action: true
        inputs:
          - name: album_ids
            regex: "^*$"

        commit:
          endpoint:
              method: put
              url: https://api.spotify.com/v1/me/albums
              headers: |
                {"Authorization": "Bearer $+token"}
              data: |
                {"ids": $+album_ids}
      - name: delete_albums
        description: delete a list of albums from user profile
        update_action: true
        inputs:
          - name: album_ids
            regex: "^*$"

        commit:
          endpoint:
              method: delete
              url: https://api.spotify.com/v1/me/albums
              headers: |
                {"Authorization": "Bearer $+token"}
              data: |
                {"ids": $+album_ids}

  - name: timer
    actions:
      - name: only_time
        description: reached onetime marker
        inputs:
          - name: marker
            regex: "^*$"
        fetch:
          strategy: timer.strategy_only_time
          middleware: timer.middleware_only_time
        time: 1

      - name: on_time_daily
        description: reached time in day marker
        inputs:
          - name: marker
            regex: "^*$"
        fetch:
          strategy: timer.strategy_on_time_daily
          middleware: timer.middleware_on_time_daily
        time: 1

      - name: on_date_monthly
        description: reached date in month marker
        inputs:
          - name: marker
            regex: "^*$"
        fetch:
          strategy: timer.strategy_on_date_monthly
          middleware: timer.middleware_on_date_monthly
        time: 1

      - name: on_date_yearly
        description: reached date in month marker
        inputs:
          - name: marker
            regex: "^*$"
        fetch:
          strategy: timer.strategy_on_date_yearly
          middleware: timer.middleware_on_date_yearly
        time: 1

      - name: on_day
        description: reached certain day of the week marker
        inputs:
          - name: marker
            regex: "^*$"
        fetch:
          strategy: timer.strategy_on_day
          middleware: timer.middleware_on_day
        time: 1

      - name: every
        description: every x time action
        inputs:
          - name: time
            regex: "^*$"
        fetch:
          strategy: timer.strategy_every
          middleware: timer.middleware_every
        time: 1
