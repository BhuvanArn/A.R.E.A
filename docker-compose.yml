services:
  client_web:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "${EXPOSE_PORT_CLIENT}:80"
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./services/router
      dockerfile: Dockerfile
    ports:
      - "${EXPOSE_PORT_SERVER}:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - server-tier
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5

  service-about:
    build:
      context: ./services/about
      dockerfile: Dockerfile
    depends_on:
      - server
    networks:
      - server-tier

  db:
    image: "postgres:15"
    networks:
      - server-tier
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

networks:
  server-tier:

volumes:
  postgres-data:
