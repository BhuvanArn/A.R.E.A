services:
  client_web:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "${EXPOSE_PORT_CLIENT}:80"
    environment:
      - EXPOSE_PORT_SERVER=${EXPOSE_PORT_SERVER}
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./services/router
      dockerfile: Dockerfile
    ports:
      - "${EXPOSE_PORT_SERVER}:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - server-tier
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  csharp_service:
    build:
      context: ./services/advanced
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      db:
        condition: service_healthy
      server:
        condition: service_healthy
    networks:
      - server-tier
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  service-about:
    build:
      context: ./services/about
      dockerfile: Dockerfile
    depends_on:
      - server
    networks:
      - server-tier

  service-action:
    build:
      context: ./services/action
      dockerfile: Dockerfile
    depends_on:
      - server
    networks:
      - server-tier
    volumes:
      - services-storage:/var/service_storage
      - ./lib/protocol:/usr/src/app/protocol
      - ./lib/serviceconf:/usr/src/app/serviceconf
      - ./lib/service_mod:/usr/src/app/service_mod

  service-reaction:
    build:
      context: ./services/reaction
      dockerfile: Dockerfile
    depends_on:
      - server
    networks:
      - server-tier
    volumes:
      - services-storage:/var/service_storage
      - ./lib/protocol:/usr/src/app/protocol
      - ./lib/serviceconf:/usr/src/app/serviceconf
      - ./lib/service_mod:/usr/src/app/service_mod

  db:
    image: "postgres:15"
    networks:
      - server-tier
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

networks:
  server-tier:

volumes:
  postgres-data:

  services-storage:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: 'data/service_storage'
